/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clusterautodeploy;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author fahimeh
 */
public class CassandraSimulator extends javax.swing.JFrame {

    public static final int WIDTH = 50;
    public static final int LENGTH = 75;
    
    
    // CUSTOMIZED CODE WE HAVE IMPLEMENTED
    private boolean hasButtonClicked;
    private CassandraCluster theCluster;
    
    
    private InformationFrame configFrame;
    private UpdateFrame updateFrame;
    // END OF CUSTOMIZED CODE WE HAVE IMPLEMENTED
    
    /**
     * Creates new form CassandraSimulator
     */
    public CassandraSimulator() {
        initComponents();
        hasButtonClicked = false;
        jPanel2.setBackground(Color.white);
        theCluster = new CassandraCluster();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel() {
            @Override
            public void paintComponent(Graphics g) {
                customizedPaingMethod(g);
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clusterautodeploy/cassandra_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 615, Short.MAX_VALUE)
        );

        jLabel1.setText("Cluster Name:");

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Set up the Cluster");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(230, 230, 230))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void customizedPaingMethod(Graphics g) {
        BufferedImage image = null;
        for (CassandraNode node: theCluster.get_normal_nodes()) {
            try {
                image = ImageIO.read(new File("/home/fahimeh/workspace/netbeans-8/ClusterAutoDeploy/src/clusterautodeploy/cassandra_1.png"));
            } catch (IOException ex) {
                Logger.getLogger(CassandraSimulator.class.getName()).log(Level.SEVERE, null, ex);
            }
            g.drawImage(image, node.get_point().x - (int)(LENGTH / 2), node.get_point().y - (int)(WIDTH / 2), null);
        }
        
        for (CassandraNode node: theCluster.get_seed_nodes()) {
            try {
                image = ImageIO.read(new File("/home/fahimeh/workspace/netbeans-8/ClusterAutoDeploy/src/clusterautodeploy/cassandra_1.png"));
            } catch (IOException ex) {
                Logger.getLogger(CassandraSimulator.class.getName()).log(Level.SEVERE, null, ex);
            }
            g.drawImage(image, node.get_point().x - (int)(LENGTH / 2), node.get_point().y - (int)(WIDTH / 2), null);
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (hasButtonClicked) {
            jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clusterautodeploy/cassandra_1.png"))); // NOI18N
            hasButtonClicked = false;
        } else {
            jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clusterautodeploy/cassandra_2.png"))); // NOI18N
            hasButtonClicked = true;
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // width = 50, length = 75
    private boolean areTwoRectanglesIntersecting(Point rectangle1_xy, Point rectangle2_xy, int width, int length) {
        
        return ((Math.abs(rectangle1_xy.x - rectangle2_xy.x) <= (length)) 
                && ((Math.abs(rectangle1_xy.y - rectangle2_xy.y) <= (width))));
    }
    
    private boolean isPointIsideRectangle(Point point, Point rectanble_xy, int width, int length) {
        return ((Math.abs(rectanble_xy.x - point.x) <= (int)(length / 2)) && (Math.abs(rectanble_xy.y - point.y) <= (int)(width/2)));
    }
    
    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            boolean isPointInsideAnyRectangle = false;
            Point point = evt.getPoint();
            int index = -1;
            for (index = 0; index < theCluster.get_seed_nodes().size(); ++index) {
                if (isPointIsideRectangle(point, theCluster.get_seed_nodes().get(index).get_point(), WIDTH, LENGTH)) {
                    isPointInsideAnyRectangle = true;
                    break;
                }
            }
            
            if (isPointInsideAnyRectangle) {
                updateFrame = new UpdateFrame(true, theCluster.get_seed_nodes().get(index).get_ip_address(), theCluster.get_seed_nodes().get(index).get_user_name(),
                        theCluster.get_seed_nodes().get(index).get_password(), index, point);
                this.setEnabled(false);
                updateFrame.setPreviousJFrame(this);
                updateFrame.setVisible(true);
            }
            else {
                for (index = 0; index < theCluster.get_normal_nodes().size(); ++index) {
                    if (isPointIsideRectangle(point, theCluster.get_normal_nodes().get(index).get_point(), WIDTH, LENGTH)) {
                        isPointInsideAnyRectangle = true;
                        break;
                    }
                }
                
                if (isPointInsideAnyRectangle) {
                    updateFrame = new UpdateFrame(false, theCluster.get_normal_nodes().get(index).get_ip_address(), theCluster.get_normal_nodes().get(index).get_user_name(),
                    theCluster.get_normal_nodes().get(index).get_password(), index, point);
                    this.setEnabled(false);
                    updateFrame.setPreviousJFrame(this);
                    updateFrame.setVisible(true);
                }
            }
            
        } else {
            if (hasButtonClicked) {
            hasButtonClicked = false;
            jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clusterautodeploy/cassandra_1.png"))); // NOI18N

            Point point = evt.getPoint();
            boolean isIntersectingWithAnyRectangle = false;
            
            for (CassandraNode node: theCluster.get_normal_nodes()) {
                if (areTwoRectanglesIntersecting(point, node.get_point(), WIDTH, LENGTH)){
                    isIntersectingWithAnyRectangle = true;
                    break;
                }
            }
            
            for (CassandraNode node: theCluster.get_seed_nodes()) {
                if (areTwoRectanglesIntersecting(point, node.get_point(), WIDTH, LENGTH)){
                    isIntersectingWithAnyRectangle = true;
                    break;
                }
            }

            if (!isIntersectingWithAnyRectangle) {
                this.setEnabled(false);
                configFrame = new InformationFrame(point);
                configFrame.setVisible(true);
                configFrame.setPreviousJFrame(this);
            }
        }
        }
        
          
    }//GEN-LAST:event_jPanel2MouseClicked

    public void setUpdateJFrameToNull() {
        updateFrame = null;
    }
    
    public void setConfigJFrameToNull() {
         configFrame = null;
    }
    
    public void deleteNormalNodeFromTheCluster(int index) {
        theCluster.get_normal_nodes().remove(index);
        updateFrame = null;
        repaint();
    }
    
    public void deleteSeedNodeFromTheCluster(int index) {
        theCluster.get_seed_nodes().remove(index);
        updateFrame = null;
        repaint();
    }
    
    public void addToThecluster(boolean seed_node, Point point, String ip_address, String user_name, String password) {
        // Cassandra12Ubuntu12Node(String ip_address, String user, String password, String listen_address, String rpc_address)
        Cassandra12Ubuntu12Node newNode = new Cassandra12Ubuntu12Node(ip_address, user_name, password, ip_address, "0.0.0.0");
        newNode.set_point(point);
        if (seed_node) {
            theCluster.add_seed_node(newNode);
        } else {
            theCluster.add_normal_node(newNode);
        }
        
        updateFrame = null;
        configFrame = null;
        
        repaint();
        
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Cluster Name can't be empty!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (theCluster.get_normal_nodes().size() == 0 && theCluster.get_seed_nodes().size() == 0) {
            JOptionPane.showMessageDialog(this, "You haven't added any node to the cluster", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!theCluster.isThereAnySeedNode()) {
            JOptionPane.showMessageDialog(this, "None of the nodes are seed nodes. Please add at least one seed node !", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            this.setEnabled(false);
            theCluster.setUp();
            System.exit(0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
